{"version":3,"sources":["notes-roll/NotesRoll.js","sounds-engine/SoundsEngine.js","notes-panel/NotesPanel.js","play-panel/PlayPanel.js","actions/PlayActions.js","editor/Editor.js","actions/EditorActions.js","header/Header.js","App.js","serviceWorker.js","reducers/notes.js","reducers/barSize.js","reducers/playback.js","reducers/index.js","index.js"],"names":["NotesRoll","onNoteItemClick","id","_this","props","deleteNote","barSize","this","notes","barHeaderItems","beatHeaderItems","forEach","note","index","itemPosition","barId","length","push","react_default","a","createElement","key","colSpan","className","_this2","map","onClick","value","getRollHeader","getNotes","Component","hangSampler","Tone","Sampler","A0","process","B0","C1","D1","E1","F1","G1","release","toMaster","NotesPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onNoteBtnClick","e","currentTarget","hang","triggerAttack","addNote","title","item","type","getPanelItems","PlayPanel","onPlayBtnClick","playSequence","onStopBtnClick","stopSequence","isPlaying","disabled","connect","store","playback","dispatch","payload","sequence","Editor","_this$props","src_play_panel_PlayPanel","src_notes_panel_NotesPanel","src_notes_roll_NotesRoll","Header","href","App","src_header_Header","src_editor_Editor","Boolean","window","location","hostname","match","state","arguments","undefined","action","toConsumableArray","concat","uuidv4","filter","play","Sequence","time","start","humanize","loop","Transport","bpm","stop","combineReducers","initialState","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b36ef887.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './NotesRoll.css';\r\n\r\nclass NotesRoll extends Component {\r\n  getRollHeader() {\r\n    const barSize = this.props.barSize;\r\n    const notes = this.props.notes;\r\n    const barHeaderItems = [];\r\n    const beatHeaderItems = [];\r\n\r\n    if (notes) {\r\n      notes.forEach((note, index) => {\r\n        const itemPosition = index + 1;\r\n        if (itemPosition % barSize === 1) {\r\n          const barId = barHeaderItems.length + 1;\r\n          barHeaderItems.push(<th key={barId} colSpan={barSize}>{barId}</th>);\r\n        }\r\n\r\n        beatHeaderItems.push(<th key={itemPosition} className=\"beat-header\">{itemPosition}</th>);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {barHeaderItems}\r\n        </tr>\r\n        <tr>\r\n          {beatHeaderItems}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n\r\n  getNotes() {\r\n    if (!this.props.notes) {\r\n      return;\r\n    }\r\n\r\n    return this.props.notes.map((note) => (\r\n      <td key={note.id} onClick={() => this.onNoteItemClick(note.id)}>\r\n        {note.value}\r\n      </td>\r\n    ));\r\n  }\r\n\r\n  onNoteItemClick = (id) => {\r\n    this.props.deleteNote(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes-roll-container\">\r\n        <h4>Sequence</h4>\r\n        <table className=\"notes-roll\">\r\n          {this.getRollHeader()}\r\n          <tbody>\r\n            <tr>\r\n              {this.getNotes()}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotesRoll;","import Tone from 'tone';\r\n\r\nconst samples = {\r\n  'A0': process.env.PUBLIC_URL + '/samples/A.mp3',\r\n  'B0': process.env.PUBLIC_URL + '/samples/B.mp3',\r\n  'C1': process.env.PUBLIC_URL + '/samples/C.mp3',\r\n  'D1': process.env.PUBLIC_URL + '/samples/D.mp3',\r\n  'E1': process.env.PUBLIC_URL + '/samples/E.mp3',\r\n  'F1': process.env.PUBLIC_URL + '/samples/F.mp3',\r\n  'G1': process.env.PUBLIC_URL + '/samples/G.mp3'\r\n};\r\n\r\nconst hangSampler = new Tone.Sampler(samples, {\r\n  'release' : 1\r\n}).toMaster();\r\n\r\nexport default hangSampler;\r\n\r\nexport function playSequence(notes) {\r\n  var sequence = new Tone.Sequence((time, note) => {\r\n    hangSampler.triggerAttack(note);\r\n  }, notes, \"4n\").start();\r\n  sequence.humanize = true;\r\n  sequence.loop = true;\r\n\r\n  Tone.Transport.bpm.value = 120;\r\n  Tone.Transport.start();\r\n  Tone.Transport.loop = false;\r\n\r\n  return sequence;\r\n};\r\n\r\nexport function stopSequence(sequence) {\r\n  if (sequence) {\r\n    sequence.stop();\r\n  }\r\n  Tone.Transport.stop();\r\n};","import React, { Component } from 'react';\r\nimport './NotesPanel.css';\r\nimport hangSampler from '../sounds-engine/SoundsEngine';\r\n\r\nclass NotesPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.hang = hangSampler;\r\n  }\r\n\r\n  getPanelItems() {\r\n    const items = [ \r\n      {value: 'A0', title: 'A'}, \r\n      {value: 'B0', title: 'B'}, \r\n      {value: 'C1', title: 'C'}, \r\n      {value: 'D1', title: 'D'}, \r\n      {value: 'E1', title: 'E'}, \r\n      {value: 'F1', title: 'F'}, \r\n      {value: 'G1', title: 'G'} \r\n    ];\r\n\r\n    return items.map(item => (\r\n      <button type=\"button\" className=\"btn btn-info\" key={item.value} onClick={this.onNoteBtnClick} value={item.value}>\r\n        {item.title}\r\n      </button>\r\n    ));\r\n  }\r\n\r\n  onNoteBtnClick = e => {\r\n    const value = e.currentTarget.value;\r\n    this.hang.triggerAttack(value);\r\n    this.props.addNote(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes-panel-container\">\r\n        <div className=\"card border-info mb-3\">\r\n          <div className=\"card-header\">Add note</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"notes-panel\">\r\n              {this.getPanelItems()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotesPanel;","import React, { Component } from 'react';\r\nimport hang from '../sounds-engine/SoundsEngine';\r\nimport { playSequence, stopSequence } from '../actions/PlayActions';\r\nimport { connect } from 'react-redux';\r\nimport './PlayPanel.css';\r\n\r\nclass PlayPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.hang = hang;\r\n  }\r\n\r\n  onPlayBtnClick = e => {\r\n    const { notes } = this.props;\r\n    this.props.playSequence(notes);\r\n  }\r\n\r\n  onStopBtnClick = e => {\r\n    this.props.stopSequence();\r\n  }\r\n\r\n  render() {\r\n    const { isPlaying } = this.props;\r\n\r\n    return (\r\n      <div className=\"play-panel-container\">\r\n        <div className=\"card border-info mb-3\">\r\n          <div className=\"card-header\">Playback</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"tool-panel-item\">\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={this.onPlayBtnClick} disabled={isPlaying}>\r\n                <i className=\"button-icon button-play\"></i>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={this.onStopBtnClick} disabled={!isPlaying}>\r\n                <i className=\"button-icon button-stop\"></i>\r\n              </button>\r\n            </div>\r\n            <p className=\"card-text tempo-panel\">Tempo: 120 bpm</p>\r\n            <p className=\"card-text time-signature-panel\">Time signature: 4/4</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    notes: store.notes,\r\n    isPlaying: store.playback.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    playSequence: notes => dispatch(playSequence(notes)),\r\n    stopSequence: () => dispatch(stopSequence())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayPanel);","export function playSequence(notes) {\r\n  return {\r\n    type: 'PLAY_SEQUENCE',\r\n    payload: notes\r\n  }\r\n}\r\n\r\nexport function stopSequence(sequence) {\r\n  return {\r\n    type: 'STOP_SEQUENCE',\r\n    payload: sequence\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport NotesRoll from '../notes-roll/NotesRoll';\r\nimport NotesPanel from '../notes-panel/NotesPanel';\r\nimport { connect } from 'react-redux';\r\nimport { addNote, deleteNote } from '../actions/EditorActions';\r\nimport './Editor.css';\r\nimport PlayPanel from '../play-panel/PlayPanel';\r\n\r\nclass Editor extends Component {\r\n  render() {\r\n    const { notes, barSize, addNote, deleteNote } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"editor-tools-panel\">\r\n          <PlayPanel></PlayPanel>\r\n          <NotesPanel addNote={addNote}></NotesPanel>\r\n        </div>\r\n        <NotesRoll notes={notes} barSize={barSize} deleteNote={deleteNote}></NotesRoll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    notes: store.notes,\r\n    barSize: store.barSize,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNote: value => dispatch(addNote(value)),\r\n    deleteNote: id => dispatch(deleteNote(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","export function addNote(value) {\r\n  return {\r\n    type: 'ADD_NOTE',\r\n    payload: value\r\n  }\r\n}\r\n\r\nexport function deleteNote(id) {\r\n  return {\r\n    type: 'DELETE_NOTE',\r\n    payload: id\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"app-header\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <a className=\"navbar-brand\" href=\"/\">Sounds of Mind</a>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Editor from './editor/Editor';\r\nimport Header from './header/Header';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"app\">\r\n          <Header></Header>\r\n\r\n          <Editor></Editor>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import uuidv4 from 'uuid/v4';\r\n\r\nconst notes = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_NOTE':\r\n      return [\r\n        ...state, \r\n        {\r\n          id: uuidv4(),\r\n          value: action.payload\r\n        }\r\n      ];\r\n    case 'DELETE_NOTE':\r\n      return state.filter((item) => item.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default notes;","const barSize = (state = 1, action) => {\r\n    return state\r\n}\r\n\r\nexport default barSize;","import { playSequence, stopSequence } from '../sounds-engine/SoundsEngine';\r\n\r\nconst play = (notes) => {\r\n  const noteValues = notes.map(note => note.value);\r\n  return playSequence(noteValues);\r\n};\r\n\r\nconst stop = (sequence) => {\r\n  stopSequence(sequence);\r\n};\r\n\r\nconst playback = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PLAY_SEQUENCE':\r\n      const sequence = play(action.payload);\r\n      return {sequence: sequence, isPlaying: true};\r\n    case 'STOP_SEQUENCE':\r\n      stop(state.sequence);\r\n      return {sequence: null, isPlaying: false};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playback;","import { combineReducers } from 'redux';\r\nimport notes from './notes';\r\nimport barSize from './barSize';\r\nimport playback from './playback';\r\n\r\nexport default combineReducers({\r\n    notes,\r\n    barSize,\r\n    playback\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/bootstrap.minty.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './reducers';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nconst initialState = {\r\n    notes: [\r\n        { id: uuidv4(), value: 'A0'},\r\n        { id: uuidv4(), value: 'A0'},\r\n        { id: uuidv4(), value: 'B0'},\r\n        { id: uuidv4(), value: 'D1'},\r\n        { id: uuidv4(), value: 'F1'},\r\n        { id: uuidv4(), value: 'F1'},\r\n        { id: uuidv4(), value: 'E1'},\r\n        { id: uuidv4(), value: 'F1'},\r\n        { id: uuidv4(), value: 'E1'},\r\n        { id: uuidv4(), value: 'C1'},\r\n        { id: uuidv4(), value: 'F1'},\r\n        { id: uuidv4(), value: 'C1'},\r\n        { id: uuidv4(), value: 'B0'},\r\n        { id: uuidv4(), value: 'D1'}\r\n    ],\r\n    barSize: 4,\r\n    playback: {\r\n        sequence: null,\r\n        isPlaying: false\r\n    }\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}