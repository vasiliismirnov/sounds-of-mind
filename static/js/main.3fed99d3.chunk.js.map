{"version":3,"sources":["play-panel/PlayPanel.js","actions/PlayActions.js","sequencer/SequencerHeader.js","sequencer/SequencerInstrumentRoll.js","sequencer/Sequencer.js","actions/SequencerActions.js","editor/Editor.js","header/Header.js","App.js","serviceWorker.js","reducers/bars.js","reducers/barSize.js","reducers/tempo.js","sounds-engine/SoundsEngine.js","reducers/playback.js","reducers/index.js","index.js","initialData.js"],"names":["connect","store","bars","isPlaying","playback","dispatch","playSequence","beats","type","payload","stopSequence","sequence","_ref","react_default","a","createElement","className","onClick","e","reduce","aggregatedBeats","bar","concat","disabled","SequencerHeader","barSize","removeBarItem","barHeaderItems","key","rowSpan","beatHeaderItems","map","index","barId","colSpan","beat","beatId","push","length","SequencerInstrumentRoll","switchNoteItem","addBarItem","noteItems","value","title","getColumns","noteValue","isNoteActive","values","includes","beatClassName","onNoteItemClick","rows","item","sequencer_SequencerHeader","sequencer_SequencerInstrumentRoll","Editor","src_play_panel_PlayPanel","src_sequencer_Sequencer","Header","href","Component","App","src_header_Header","src_editor_Editor","Boolean","window","location","hostname","match","state","arguments","undefined","action","_action$payload","beatToUpdateIndex","barToUpdateIndex","findIndex","updatedBeats","slice","find","Object","objectSpread","filter","toConsumableArray","switchNoteHandler","beatsToAdd","i","uuidv4","barToAdd","addBar","removeBar","tempo","hangSampler","Tone","Sampler","A0","process","B0","C1","D1","E1","F1","G1","release","toMaster","play","notes","sequences","notesSizes","maxLength","Math","max","apply","_loop","notesPart","Sequence","time","note","triggerAttack","start","humanize","loop","Transport","bpm","stop","forEach","combineReducers","initialState","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3fed99d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { playSequence, stopSequence } from '../actions/PlayActions';\r\nimport { connect } from 'react-redux';\r\nimport './PlayPanel.css';\r\n\r\nconst PlayPanel = ({bars, isPlaying, playSequence, stopSequence}) => {\r\n\r\n  const onPlayBtnClick = e => {\r\n    const beats = bars.reduce((aggregatedBeats, bar) => \r\n      aggregatedBeats.concat(bar.beats), []);\r\n    playSequence(beats);\r\n  }\r\n\r\n  const onStopBtnClick = e => {\r\n    stopSequence();\r\n  }\r\n\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"play-panel-container\">\r\n        <div className=\"card border-info\">\r\n          <div className=\"card-header\">Playback</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"tool-panel-item\">\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={onPlayBtnClick} disabled={isPlaying}>\r\n                <i className=\"button-icon button-play\"></i>\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={onStopBtnClick} disabled={!isPlaying}>\r\n                <i className=\"button-icon button-stop\"></i>\r\n              </button>\r\n            </div>\r\n            <p className=\"card-text tempo-panel\">Tempo: 120 bpm</p>\r\n            <p className=\"card-text time-signature-panel\">Time signature: 4/4</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    bars: store.bars,\r\n    isPlaying: store.playback.isPlaying\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    playSequence: beats => dispatch(playSequence(beats)),\r\n    stopSequence: () => dispatch(stopSequence())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayPanel);","export function playSequence(notes) {\r\n  return {\r\n    type: 'PLAY_SEQUENCE',\r\n    payload: notes\r\n  }\r\n}\r\n\r\nexport function stopSequence(sequence) {\r\n  return {\r\n    type: 'STOP_SEQUENCE',\r\n    payload: sequence\r\n  }\r\n}","import React from 'react';\r\n\r\nconst SequencerHeader = ({barSize, bars, removeBarItem}) => {\r\n  const onRemoveBarClick = (barId) => {\r\n    removeBarItem(barId);\r\n  }\r\n\r\n  let barHeaderItems = [\r\n    <th key=\"0\" rowSpan=\"2\"></th>\r\n  ];\r\n  let beatHeaderItems = [];\r\n\r\n  if (bars) {\r\n    barHeaderItems = barHeaderItems.concat(bars.map((bar, index) => (\r\n        <th key={bar.barId} colSpan={barSize} className=\"bar-header-item\">\r\n          {index + 1}\r\n          <i className=\"remove-icon\" onClick={() => onRemoveBarClick(bar.barId)}></i>\r\n        </th>\r\n    \r\n        )));\r\n\r\n    const beats = bars.reduce((aggregatedBeats, bar) => \r\n      aggregatedBeats.concat(bar.beats), []);\r\n\r\n    beatHeaderItems = beats.map((beat, index) => \r\n      <th key={beat.beatId} className=\"beat-header\">{index + 1}</th>);\r\n  }\r\n\r\n  barHeaderItems.push(<th key={barHeaderItems.length} rowSpan=\"2\"></th>);\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {barHeaderItems}\r\n      </tr>\r\n      <tr>\r\n        {beatHeaderItems}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default SequencerHeader;","import React from 'react';\r\n\r\nconst SequencerInstrumentRoll = ({ barSize, bars, switchNoteItem, addBarItem }) => {\r\n  const noteItems = [ \r\n    {value: 'A0', title: 'A'}, \r\n    {value: 'B0', title: 'B'}, \r\n    {value: 'C1', title: 'C'}, \r\n    {value: 'D1', title: 'D'}, \r\n    {value: 'E1', title: 'E'}, \r\n    {value: 'F1', title: 'F'}, \r\n    {value: 'G1', title: 'G'} \r\n  ];\r\n\r\n  const beats = bars.reduce((aggregatedBeats, bar) => \r\n    aggregatedBeats.concat(bar.beats), []);\r\n\r\n  const onNoteItemClick = (beatId, noteValue) => {\r\n    switchNoteItem(beatId, noteValue);\r\n  }\r\n\r\n  const onAddBeatClick = () => {\r\n    addBarItem(barSize);\r\n  }\r\n\r\n  const getColumns = (noteValue) => beats.map((beat) => {\r\n    const isNoteActive = beat.values.includes(noteValue);\r\n    const beatClassName = isNoteActive ? 'active-note': 'inactive-note';\r\n    return (\r\n      <td key={beat.beatId} onClick={() => onNoteItemClick(beat.beatId, noteValue)} className={beatClassName}>\r\n        {isNoteActive && '•'}\r\n      </td>\r\n    );\r\n  });\r\n\r\n  const rows = noteItems.map((item, index) => (\r\n    <tr key={item.value}>\r\n      <td>{item.title}</td>\r\n      {getColumns(item.value)}\r\n      {index === 0 && \r\n      <td className=\"add-bar-item\" rowSpan={noteItems.length}>\r\n        <i className=\"add-icon\" onClick={() => onAddBeatClick()}></i>\r\n      </td>}\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <tbody>\r\n      {rows}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default SequencerInstrumentRoll;","import React from 'react';\r\nimport SequencerHeader from './SequencerHeader';\r\nimport SequencerInstrumentRoll from './SequencerInstrumentRoll';\r\nimport { connect } from 'react-redux';\r\nimport { switchNoteItem, addBarItem, removeBarItem } from '../actions/SequencerActions';\r\nimport './Sequencer.css';\r\n\r\nconst Sequencer = ({ barSize, bars, switchNoteItem, addBarItem, removeBarItem }) => {\r\n  if (!bars) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className=\"sequencer-container column\">\r\n      <h4>Sequence</h4>\r\n      <table className=\"sequencer-roll\">\r\n        <SequencerHeader \r\n          barSize={barSize} \r\n          bars={bars} \r\n          removeBarItem={removeBarItem}>\r\n        </SequencerHeader>\r\n        <SequencerInstrumentRoll\r\n          barSize={barSize}\r\n          bars={bars}\r\n          switchNoteItem={switchNoteItem}\r\n          addBarItem={addBarItem}>\r\n        </SequencerInstrumentRoll>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    bars: store.bars,\r\n    barSize: store.barSize,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    switchNoteItem: (beatId, noteValue) => dispatch(switchNoteItem(beatId, noteValue)),\r\n    addBarItem: (barSize) => dispatch(addBarItem(barSize)),\r\n    removeBarItem: (barId) => dispatch(removeBarItem(barId))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sequencer);","export function switchNoteItem(beatId, noteValue) {\r\n  return {\r\n    type: 'SWITCH_NOTE',\r\n    payload: {\r\n      beatId: beatId,\r\n      noteValue: noteValue\r\n    }\r\n  }\r\n};\r\n\r\nexport function addBarItem(barSize) {\r\n  return {\r\n    type: 'ADD_BAR',\r\n    payload: barSize\r\n  }\r\n};\r\n\r\nexport function removeBarItem(barId) {\r\n  return {\r\n    type: 'REMOVE_BAR',\r\n    payload: barId\r\n  }\r\n};","import React from 'react';\r\nimport './Editor.css';\r\nimport PlayPanel from '../play-panel/PlayPanel';\r\nimport Sequencer from '../sequencer/Sequencer';\r\n\r\nconst Editor = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"column container\">\r\n        <div className=\"row\">\r\n          <PlayPanel></PlayPanel>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Sequencer></Sequencer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"app-header row\">\r\n        <nav className=\"column\">\r\n          <a className=\"\" href=\"#\">Sounds of Mind</a>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Editor from './editor/Editor';\r\nimport Header from './header/Header';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"app container\">\r\n          <Header></Header>\r\n\r\n          <Editor></Editor>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import uuidv4 from 'uuid/v4';\r\n\r\nconst switchNoteHandler = (state, beatId, noteValue) => {\r\n  let beatToUpdateIndex = -1;\r\n  const barToUpdateIndex = state.findIndex(bar => {\r\n    beatToUpdateIndex = bar.beats.findIndex(beat => beat.beatId === beatId);\r\n    return (beatToUpdateIndex !== -1) ? true : false;\r\n  });\r\n\r\n  if (barToUpdateIndex !== -1 && beatToUpdateIndex !== -1) {\r\n    const resultState = state.slice();\r\n    const barToUpdate = resultState[barToUpdateIndex];\r\n\r\n    const updatedBeats = barToUpdate.beats.map((beat, index) => {\r\n      if (index !== beatToUpdateIndex) {\r\n        return beat;\r\n      }\r\n\r\n      const value = beat.values.find(value => value === noteValue);\r\n      if (value) {\r\n        // remove value if it was in beat\r\n        return { ...beat, values: beat.values.filter(value => value !== noteValue) };\r\n      } else {\r\n        // add value if it was not in beat\r\n        return { ...beat, values: [...beat.values, noteValue] };\r\n      }\r\n    });\r\n\r\n    return state.map((bar, index) =>\r\n      index === barToUpdateIndex ?\r\n        { ...bar, beats: updatedBeats } :\r\n        bar\r\n    );\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst addBar = (state, barSize) => {\r\n  const beatsToAdd = [];\r\n\r\n  for (let i = 0; i < barSize; i++) {\r\n    beatsToAdd.push({ beatId: uuidv4(), values: [] });\r\n  }\r\n\r\n  const barToAdd = {\r\n    barId: uuidv4(),\r\n    beats: beatsToAdd\r\n  }\r\n\r\n  return [...state, barToAdd];\r\n}\r\n\r\nconst removeBar = (state, barId) => {\r\n  return state.filter(bar => bar.barId !== barId);\r\n}\r\n\r\nconst bars = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SWITCH_NOTE':\r\n      const { beatId, noteValue } = action.payload;\r\n      return switchNoteHandler(state, beatId, noteValue);\r\n    case 'ADD_BAR':\r\n      const barSize = action.payload;\r\n      return addBar(state, barSize);\r\n    case 'REMOVE_BAR':\r\n      const barId = action.payload;\r\n      return removeBar(state, barId);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default bars;","const barSize = (state = 1, action) => {\r\n    return state\r\n}\r\n\r\nexport default barSize;","const tempo = (state = 120, action) => {\r\n    return state\r\n}\r\n\r\nexport default tempo;","import Tone from 'tone';\r\n\r\nconst samples = {\r\n  'A0': process.env.PUBLIC_URL + '/samples/A.mp3',\r\n  'B0': process.env.PUBLIC_URL + '/samples/B.mp3',\r\n  'C1': process.env.PUBLIC_URL + '/samples/C.mp3',\r\n  'D1': process.env.PUBLIC_URL + '/samples/D.mp3',\r\n  'E1': process.env.PUBLIC_URL + '/samples/E.mp3',\r\n  'F1': process.env.PUBLIC_URL + '/samples/F.mp3',\r\n  'G1': process.env.PUBLIC_URL + '/samples/G.mp3'\r\n};\r\n\r\nconst hangSampler = new Tone.Sampler(samples, {'release' : 1}).toMaster();\r\n\r\nexport default hangSampler;\r\n\r\nexport function playSequence(notes) {\r\n  const sequences = [];\r\n  const notesSizes = notes.map(value => value.length);\r\n  const maxLength = Math.max(...notesSizes);\r\n\r\n  for(let i = 0; i < maxLength; i++) {\r\n    const notesPart = notes.map(value => value[i]);\r\n    let sequence = new Tone.Sequence((time, note) => {\r\n      hangSampler.triggerAttack(note);\r\n    }, notesPart, \"4n\").start();\r\n    sequence.humanize = true;\r\n    sequence.loop = true;\r\n    sequences.push(sequence);\r\n  }\r\n\r\n  Tone.Transport.bpm.value = 120;\r\n  Tone.Transport.start();\r\n  Tone.Transport.loop = false;\r\n\r\n  return sequences;\r\n};\r\n\r\nexport function stopSequence(sequences) {\r\n  if (sequences) {\r\n    sequences.forEach(sequence => {\r\n      sequence.stop();\r\n    });\r\n  }\r\n  Tone.Transport.stop();\r\n};","import { playSequence, stopSequence } from '../sounds-engine/SoundsEngine';\r\n\r\nconst play = (notes) => {\r\n  const noteValues = notes.map(note => note.values);\r\n  return playSequence(noteValues);\r\n};\r\n\r\nconst stop = (sequence) => {\r\n  stopSequence(sequence);\r\n};\r\n\r\nconst playback = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PLAY_SEQUENCE':\r\n      const sequence = play(action.payload);\r\n      return {sequence: sequence, isPlaying: true};\r\n    case 'STOP_SEQUENCE':\r\n      stop(state.sequence);\r\n      return {sequence: null, isPlaying: false};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playback;","import { combineReducers } from 'redux';\r\nimport bars from './bars';\r\nimport barSize from './barSize';\r\nimport tempo from './tempo';\r\nimport playback from './playback';\r\n\r\nexport default combineReducers({\r\n    bars,\r\n    barSize,\r\n    tempo,\r\n    playback\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport 'milligram/dist/milligram.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './reducers';\r\nimport { track } from './initialData';\r\n\r\nconst initialState = track;\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();","import uuidv4 from 'uuid/v4';\r\n\r\n// Track Bars map.\r\n/**\r\n * Track Bars map.\r\n * Bar is object like:\r\n * {\r\n *     barId: BAR_ID,                   // unique identifier of the bar\r\n *     barSize: 4,                      // size of thebar (how much beats in the bar)\r\n *     beats: [                         // array with beats\r\n *         { \r\n *             beatId: BEAT_ID,     // unique identifier of the beat\r\n *             values: ['A0', 'C1']     // list of the note values in the beat\r\n *         }\r\n *     ]\r\n * }\r\n */\r\nexport const track = {\r\n  bars: [\r\n    {\r\n      barId: uuidv4(),\r\n      beats: [\r\n        { beatId: uuidv4(), values: ['A0', 'C1']},\r\n        { beatId: uuidv4(), values: ['C1', 'E1']},\r\n        { beatId: uuidv4(), values: []},\r\n        { beatId: uuidv4(), values: ['E1']}\r\n      ]\r\n    },\r\n    {\r\n      barId: uuidv4(),\r\n      beats: [\r\n        { beatId: uuidv4(), values: ['A0', 'C1']},\r\n        { beatId: uuidv4(), values: ['C1', 'E1']},\r\n        { beatId: uuidv4(), values: []},\r\n        { beatId: uuidv4(), values: ['E1']}\r\n      ]\r\n    },\r\n    {\r\n      barId: uuidv4(),\r\n      beats: [\r\n        { beatId: uuidv4(), values: ['A0', 'C1']},\r\n        { beatId: uuidv4(), values: ['C1', 'E1']},\r\n        { beatId: uuidv4(), values: []},\r\n        { beatId: uuidv4(), values: ['E1']}\r\n      ]\r\n    },\r\n    {\r\n      barId: uuidv4(),\r\n      beats: [\r\n        { beatId: uuidv4(), values: ['A0', 'C1']},\r\n        { beatId: uuidv4(), values: ['E1']},\r\n        { beatId: uuidv4(), values: ['F1']},\r\n        { beatId: uuidv4(), values: ['E1']}\r\n      ]\r\n    }\r\n  ],\r\n  barSize: 4,\r\n  tempo: 120,\r\n  playback: {\r\n    sequence: null,\r\n    isPlaying: false\r\n  }\r\n};"],"sourceRoot":""}